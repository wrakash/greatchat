[{"E:\\js project\\whatsapp\\whatsapp-clone\\src\\index.js":"1","E:\\js project\\whatsapp\\whatsapp-clone\\src\\App.js":"2","E:\\js project\\whatsapp\\whatsapp-clone\\src\\reportWebVitals.js":"3","E:\\js project\\whatsapp\\whatsapp-clone\\src\\SideBar.js":"4","E:\\js project\\whatsapp\\whatsapp-clone\\src\\Chat.js":"5","E:\\js project\\whatsapp\\whatsapp-clone\\src\\SidebarChat.js":"6","E:\\js project\\whatsapp\\whatsapp-clone\\src\\axios.js":"7","E:\\js project\\whatsapp\\whatsapp-clone\\src\\firebase.js":"8","E:\\js project\\whatsapp\\whatsapp-clone\\src\\Login.js":"9","E:\\js project\\whatsapp\\whatsapp-clone\\src\\reducer.js":"10","E:\\js project\\whatsapp\\whatsapp-clone\\src\\StateProvider.js":"11"},{"size":686,"mtime":1607378976442,"results":"12","hashOfConfig":"13"},{"size":1603,"mtime":1607393843700,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607183159624,"results":"15","hashOfConfig":"13"},{"size":1887,"mtime":1607387970596,"results":"16","hashOfConfig":"13"},{"size":3288,"mtime":1607385466430,"results":"17","hashOfConfig":"13"},{"size":1402,"mtime":1607386611993,"results":"18","hashOfConfig":"13"},{"size":131,"mtime":1607243606107,"results":"19","hashOfConfig":"13"},{"size":623,"mtime":1607357025305,"results":"20","hashOfConfig":"13"},{"size":1118,"mtime":1607377830851,"results":"21","hashOfConfig":"13"},{"size":428,"mtime":1607385458706,"results":"22","hashOfConfig":"13"},{"size":383,"mtime":1607378656573,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7jn0v1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\js project\\whatsapp\\whatsapp-clone\\src\\index.js",[],["51","52"],"E:\\js project\\whatsapp\\whatsapp-clone\\src\\App.js",["53","54"],"E:\\js project\\whatsapp\\whatsapp-clone\\src\\reportWebVitals.js",[],"E:\\js project\\whatsapp\\whatsapp-clone\\src\\SideBar.js",["55"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./SideBar.css\";\r\nimport db from \"./firebase\";\r\nimport DonutLarge from \"@material-ui/icons/DonutLarge\";\r\nimport Chat from \"@material-ui/icons/Chat\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\n\r\nfunction SideBar() {\r\n  const[{user}, dispatch ]= useStateValue();\r\n  const [rooms, setRooms] = useState([]);\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n    return () =>{\r\n      unsubscribe();\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar_header\">\r\n        <Avatar src={user?.photoURL} />\r\n        <div className=\"sidebar_headerRight\">\r\n          \r\n          <IconButton>\r\n            <DonutLarge />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <Chat />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchContainer\">\r\n          <SearchOutlined style={{ marginLeft: \"5px\" }} />\r\n          <input type=\"text\" placeholder=\"Search or srart new chat\" />\r\n        </div>\r\n      </div>\r\n      <SidebarChat addNewChat />\r\n      <div className=\"sidebar_chats\">\r\n        \r\n        {\r\n        rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","E:\\js project\\whatsapp\\whatsapp-clone\\src\\Chat.js",["56","57"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {\r\n  AttachFile,\r\n  MoreVert,\r\n  SearchOutlined,\r\n  InsertEmoticon,\r\n  Mic,\r\n} from \"@material-ui/icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from 'firebase';\r\n\r\nexport default function Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const[{user}, dispatch ]= useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((onSnapshot) => setRoomName\r\n        (onSnapshot.data().name));\r\n\r\n        db.collection('rooms').doc(roomId).\r\n        collection(\"messages\").orderBy\r\n        ('timestamp', 'asc')\r\n        .onSnapshot(onSnapshot=>\r\n          setMessages(onSnapshot.docs.map((doc) =>\r\n          doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n // console.log(\"messages: \"+ messages);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n   // console.log(input);\r\n   db.collection('rooms').doc(roomId).collection\r\n   ('messages').add({\r\n       message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n   });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat_header\">\r\n        <Avatar\r\n          src={`https://avatars.dicebear.com/4.5/api/human/${seed}.svg`}\r\n        />\r\n        <div className=\"chat_headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p> last seen {\"\"}\r\n          {new Date(\r\n            messages[messages.length-1]?.timestamp?.toDate()\r\n          ).toLocaleString('en-US', {timeZone: \"Asia/Kolkata\"})} </p>\r\n        </div>\r\n\r\n        <div className=\"chat_headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat_body\">\r\n        {messages.map((message) => (\r\n          <p className={`chat_message ${message.name === user.displayName && \"chat_reciever\"}`}>\r\n            <span className=\"chat_name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat_timeStamp\">{new Date(message.timestamp?.toDate())\r\n            .toLocaleString('en-US', {timeZone: \"Asia/Kolkata\"})\r\n            }</span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat_footer\">\r\n        <InsertEmoticon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            type=\"text\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Enter message here\"\r\n          />\r\n          <button type=\"submit\" onClick={sendMessage}>\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <Mic />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\js project\\whatsapp\\whatsapp-clone\\src\\SidebarChat.js",["58"],"import React, { useState, useEffect } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./SidebarChat.css\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"please enter name for chat\");\r\n\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar\r\n          src={`https://avatars.dicebear.com/4.5/api/human/${seed}.svg`}\r\n        />\r\n        <div className=\"sidebarChat_info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"add_new\">\r\n      <h3>Add new room</h3>\r\n    </div>\r\n  );\r\n}\r\nexport default SidebarChat;\r\n","E:\\js project\\whatsapp\\whatsapp-clone\\src\\axios.js",[],"E:\\js project\\whatsapp\\whatsapp-clone\\src\\firebase.js",[],"E:\\js project\\whatsapp\\whatsapp-clone\\src\\Login.js",["59"],"import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport \"./Login.css\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\n\r\n\r\nfunction Login() {\r\n   \r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then(result =>  {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_container\">\r\n          <img\r\n          src='https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/032015/whatsapp.jpg?itok=dTlsxLl4'\r\n          alt=\"login\"/>\r\n          <div className=\"login_text\">\r\n            <h1>Sign in to WhatsApp</h1>\r\n          </div>\r\n          <Button type=\"submit\" onClick={signIn}>\r\n              Sign in to WhatsApp\r\n          </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\js project\\whatsapp\\whatsapp-clone\\src\\reducer.js",[],"E:\\js project\\whatsapp\\whatsapp-clone\\src\\StateProvider.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":19,"column":17,"nodeType":"66","messageId":"67","endLine":19,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":71,"column":9,"nodeType":"70","endLine":71,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":14,"column":17,"nodeType":"66","messageId":"67","endLine":14,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":22,"column":17,"nodeType":"66","messageId":"67","endLine":22,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":31,"column":43,"nodeType":"73","messageId":"74","endLine":31,"endColumn":44,"fix":"75"},{"ruleId":"76","severity":1,"message":"77","line":20,"column":6,"nodeType":"78","endLine":20,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":12,"column":12,"nodeType":"82","messageId":"83","endLine":12,"endColumn":14},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"86","text":"87"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",[929,940],"\r\n        .",{"desc":"89","fix":"90"},"Update the dependencies array to be: [id]",{"range":"91","text":"92"},[619,621],"[id]"]